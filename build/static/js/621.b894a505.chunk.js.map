{"version":3,"file":"static/js/621.b894a505.chunk.js","mappings":"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","sources":["webpack://abra/./src/components/UI/Card/card.module.css?d047","components/UI/Card/card.js","webpack://abra/./src/components/mainPage/currentweather/currentweather.module.css?6963","webpack://abra/./src/components/UI/favoritesButton/favoritesButton.module.css?d24f","components/UI/favoritesButton/favoritesButton.js","components/mainPage/currentweather/currentweather.js","webpack://abra/./src/components/mainPage/nextWeekWeather/tempDisplay/tempDispaly.module.css?7d9d","components/mainPage/nextWeekWeather/tempDisplay/tempDispaly.js","webpack://abra/./src/components/mainPage/nextWeekWeather/nextWeekWeather.module.css?b9e9","components/mainPage/nextWeekWeather/nextWeekWeather.js","webpack://abra/./src/components/mainPage/searchBar/DropDown/dropDown.module.css?97f5","components/mainPage/searchBar/DropDown/dropDown.js","webpack://abra/./src/components/mainPage/searchBar/SerchBar.module.css?d967","components/mainPage/searchBar/SearchBar.js","webpack://abra/./src/components/mainPage/main.module.css?db87","components/mainPage/main.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Card\":\"card_Card__NwL4j\",\"temperature\":\"card_temperature__hvbeu\"};","import { useEffect } from \"react\";\r\nimport Classes from \"./card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div onClick={props.onClick} className={`${Classes.Card} ${props.class}`}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n// vHpVFJikTtHFfeWGvUo8EqmhA5ZX7NAA\r\n","// extracted by mini-css-extract-plugin\nexport default {\"currentweather\":\"currentweather_currentweather__PUym6\",\"temperature\":\"currentweather_temperature__H45yS\"};","// extracted by mini-css-extract-plugin\nexport default {\"favButton\":\"favoritesButton_favButton__kjXOh\"};","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Classes from \"./favoritesButton.module.css\";\r\n\r\nconst FavoritesButton = (props) => {\r\n  const dispach = useDispatch();\r\n  const isFavorite = useSelector((state) => {\r\n    return state.favorites[props.id];\r\n  });\r\n\r\n  const changeFavoriteStatus = () => {\r\n    if (isFavorite) {\r\n      dispach({ type: \"removeFavorite\", payload: { id: props.id } });\r\n    } else {\r\n      dispach({\r\n        type: \"addFavorite\",\r\n        payload: { id: props.id, city: props.city },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: isFavorite\r\n          ? \"rgb(217, 217, 42)\"\r\n          : \"rgb(201, 201, 201)\",\r\n      }}\r\n      onClick={changeFavoriteStatus}\r\n      className={Classes.favButton}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default FavoritesButton;\r\n","import Classes from \"./currentweather.module.css\";\r\nimport FavoritesButton from \"../../UI/favoritesButton/favoritesButton\";\r\nimport Loading from \"../../UI/loading/loading\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst Currentweather = (props) => {\r\n  const dispach = useDispatch();\r\n  const [data, setData] = useState({});\r\n  const location = useSelector((state) => {\r\n    return state.location;\r\n  });\r\n  const storedData = useSelector((state) => {\r\n    return state.currentWheather[location.key];\r\n  });\r\n  useEffect(() => {\r\n    if (storedData !== undefined) {\r\n      setData(storedData);\r\n    } else if (location.key !== undefined) {\r\n      fetch(\r\n        `http://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=vHiCdzBf9ay1yTDR04546BFGIZDDIq4s`\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          let icon = res[0].WeatherIcon;\r\n          if (icon < 10) {\r\n            icon = \"0\" + icon;\r\n          }\r\n          let requiredDetails = {\r\n            temperature: res[0].Temperature.Metric.Value,\r\n            WeatherText: res[0].WeatherText,\r\n            icon: icon,\r\n            city: location.city,\r\n            key: location.key,\r\n          };\r\n          setData(requiredDetails);\r\n          dispach({\r\n            type: \"AddCurrentWheather\",\r\n            payload: { key: location.key, data: requiredDetails },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          dispach({ type: \"alert\" });\r\n        });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className={Classes.currentweather}>\r\n      <FavoritesButton id={location.key} city={location.city} />\r\n      <div className={Classes.NextWeek}></div>\r\n      <h1>{data.city}</h1>\r\n      <div className={Classes.temperature}>{data.temperature}&#8451;</div>\r\n      <img\r\n        src={`https://developer.accuweather.com/sites/default/files/${data.icon}-s.png`}\r\n        loading=\"lazy\"\r\n        alt=\"icon\"\r\n      ></img>\r\n      <h2>{data.WeatherText}</h2>\r\n      {data === undefined && <Loading />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Currentweather;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tempDisplay\":\"tempDispaly_tempDisplay__tq+uJ\"};","import Classes from \"./tempDispaly.module.css\";\r\n\r\nconst TempDisplay = (props) => {\r\n  return (\r\n    <div className={Classes.tempDisplay}>\r\n      <h5>{props.headline}</h5>\r\n      <p>{props.temperature}&#8451;</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempDisplay;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"nextWeekWeather\":\"nextWeekWeather_nextWeekWeather__AHJdV\",\"nextWeekCard\":\"nextWeekWeather_nextWeekCard__WiiQG\",\"tempContainer\":\"nextWeekWeather_tempContainer__MfvUG\"};","import Card from \"../../UI/Card/card\";\r\nimport TempDisplay from \"./tempDisplay/tempDispaly\";\r\nimport Classes from \"./nextWeekWeather.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Loading from \"../../UI/loading/loading\";\r\n\r\nconst NextWeekWeather = (props) => {\r\n  const dispach = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const location = useSelector((state) => {\r\n    return state.location;\r\n  });\r\n  const storedData = useSelector((state) => {\r\n    return state.futureWheather[location.key];\r\n  });\r\n  useEffect(() => {\r\n    if (storedData !== undefined) {\r\n      setData(storedData);\r\n    } else if (location.key !== undefined) {\r\n      fetch(\r\n        \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\" +\r\n          location.key +\r\n          \"?apikey=vHiCdzBf9ay1yTDR04546BFGIZDDIq4s&metric=true\"\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          let future = [];\r\n          let options = {\r\n            weekday: \"long\",\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n          };\r\n          res.DailyForecasts.forEach((day) => {\r\n            let icon = day.Day.Icon;\r\n            if (icon < 10) {\r\n              icon = \"0\" + icon;\r\n            }\r\n            future.push({\r\n              day: new Date(day.Date).toLocaleDateString(\"en-US\", options),\r\n              min: day.Temperature.Minimum.Value,\r\n              max: day.Temperature.Maximum.Value,\r\n              src: icon,\r\n            });\r\n          });\r\n          setData(future);\r\n          dispach({\r\n            type: \"AddFutureWheather\",\r\n            payload: { key: location.key, data: future },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          dispach({ type: \"alert\" });\r\n        });\r\n    }\r\n  }, [location]);\r\n  return (\r\n    <div className={Classes.nextWeekWeather}>\r\n      {data.map((forcast, index) => {\r\n        return (\r\n          <Card key={index} class={Classes.nextWeekCard}>\r\n            <h2>{forcast.day}</h2>\r\n            <h3>temperature:</h3>\r\n            <div className={Classes.tempContainer}>\r\n              <TempDisplay headline=\"minimum\" temperature={forcast.min} />\r\n              <img\r\n                src={`https://developer.accuweather.com/sites/default/files/${forcast.src}-s.png`}\r\n                loading=\"lazy\"\r\n              ></img>\r\n              <TempDisplay headline=\"maximum\" temperature={forcast.max} />\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n      {data === undefined && <Loading />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NextWeekWeather;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropDown\":\"dropDown_dropDown__Zx6BJ\"};","import Classes from \"./dropDown.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nconst DropDown = (props) => {\r\n  const [autoCompleteLists, setAutoCompleteLists] = useState([]);\r\n  useEffect(() => {\r\n    if (props.inputVal !== \"\" && props.inputVal.length > 1) {\r\n      fetch(\r\n        `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=vHiCdzBf9ay1yTDR04546BFGIZDDIq4s&q=${props.inputVal}`\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          let arr = [];\r\n          res.forEach((city) => {\r\n            arr.push({ location: city.LocalizedName, key: city.Key });\r\n          });\r\n          setAutoCompleteLists(arr);\r\n        });\r\n    }\r\n  }, [props.inputVal]);\r\n  const autoComplete = (event) => {\r\n    setAutoCompleteLists([]);\r\n    props.autoComplete(autoCompleteLists[event.currentTarget.id]);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        display:\r\n          props.inputVal !== \"\" && autoCompleteLists.length !== 0\r\n            ? \"inline-block\"\r\n            : \"none\",\r\n      }}\r\n      className={Classes.dropDown}\r\n    >\r\n      {autoCompleteLists.map((city, index) => {\r\n        return (\r\n          <div key={index} id={index} onClick={autoComplete}>\r\n            {city.location}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n\r\n//tZue34nmLbdXAXJG9XMDx1AV7Za3rUoR\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"SerchBar_searchContainer__NJQvC\",\"searchError\":\"SerchBar_searchError__3NKWk\",\"Search\":\"SerchBar_Search__p5rIi\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DropDown from \"./DropDown/dropDown\";\r\nimport Classes from \"./SerchBar.module.css\";\r\n\r\nconst Search = (props) => {\r\n  const dispach = useDispatch();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [searchHaveError, setsearchHaveError] = useState(null);\r\n  let autoCompleteData;\r\n  const inputHandler = (event) => {\r\n    let value = event.target.value;\r\n    if (value.length === 0) {\r\n      setsearchHaveError(null);\r\n    } else {\r\n      for (let i = 0; i < value.length; i++) {\r\n        let temp = value.charCodeAt(i);\r\n\r\n        if ((96 < temp && temp < 122) || (65 < temp && temp < 90)) {\r\n          if (i === value.length - 1) {\r\n            setsearchHaveError(false);\r\n          }\r\n        } else {\r\n          setsearchHaveError(true);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    event.target.value.slice();\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event, value) => {\r\n    event.preventDefault();\r\n    if (autoCompleteData !== undefined) {\r\n      setInputValue(\"\");\r\n      dispach({ type: \"changeLocation\", payload: autoCompleteData });\r\n    }\r\n  };\r\n  const autoCompleteHandler = (value) => {\r\n    setInputValue(value.location);\r\n    autoCompleteData = value;\r\n  };\r\n  return (\r\n    <div className={Classes.searchContainer}>\r\n      <form onSubmit={submitHandler} className={Classes.Search}>\r\n        <button type=\"submit\"></button>\r\n        <input\r\n          className={searchHaveError ? Classes.searchError : null}\r\n          onChange={inputHandler}\r\n          placeholder=\"Search here\"\r\n          value={inputValue}\r\n          type=\"text\"\r\n        ></input>\r\n      </form>\r\n      {searchHaveError && <p>invalid input only english letter are allowed</p>}\r\n      <DropDown inputVal={inputValue} autoComplete={autoCompleteHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mainCard\":\"main_mainCard__mhHhm\"};","import Card from \"../UI/Card/card\";\r\nimport Currentweather from \"./currentweather/currentweather\";\r\nimport NextWeekWeather from \"./nextWeekWeather/nextWeekWeather\";\r\nimport SearchBar from \"./searchBar/SearchBar\";\r\nimport Classes from \"./main.module.css\";\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <main className={Classes.mainPage}>\r\n      <SearchBar />\r\n      <Card class={Classes.mainCard}>\r\n        <NextWeekWeather />\r\n        <Currentweather />\r\n      </Card>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"names":["props","onClick","className","Classes","class","children","dispach","useDispatch","isFavorite","useSelector","state","favorites","id","style","backgroundColor","type","payload","city","useState","data","setData","location","storedData","currentWheather","key","useEffect","undefined","fetch","then","res","json","icon","WeatherIcon","requiredDetails","temperature","Temperature","Metric","Value","WeatherText","catch","err","src","loading","alt","headline","futureWheather","future","options","weekday","year","month","day","DailyForecasts","forEach","Day","Icon","push","Date","toLocaleDateString","min","Minimum","max","Maximum","map","forcast","index","autoCompleteLists","setAutoCompleteLists","inputVal","length","arr","LocalizedName","Key","autoComplete","event","currentTarget","display","autoCompleteData","inputValue","setInputValue","searchHaveError","setsearchHaveError","onSubmit","value","preventDefault","onChange","target","i","temp","charCodeAt","slice","placeholder","SearchBar"],"sourceRoot":""}